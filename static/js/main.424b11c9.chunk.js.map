{"version":3,"sources":["views/header/logo.svg","views/congratulation/congratulation.gif","views/countDown/time/index.js","utils/index.js","views/countDown/index.js","views/content/index.js","views/header/index.js","views/congratulation/index.js","views/layout/index.js","views/home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","countDown_time","_ref","m","s","react_default","a","createElement","className","n","width","arguments","length","undefined","z","Array","join","pad","buttonStyle","margin","CountDown","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","beginCountDown","timer","setInterval","start","state","clearInterval","props","history","push","reset","setState","_this$state","style","onClick","Component","withRouter","content","countDown","Layout","role","aria-label","href","src","logo","alt","height","aria-expanded","aria-hidden","views_congratulation","congratulation","HashRouter","basename","process","header_Layout","Route","path","exact","component","Content","Congratulation","Home","layout_Layout","App","home_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.424b11c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6bca466f.svg\";","module.exports = __webpack_public_path__ + \"static/media/congratulation.28576b52.gif\";","import React from 'react'\nimport { pad } from 'utils/index.js'\nimport './index.css'\n\nexport default ({ m, s }) => {\n  return (\n    <div className=\"card-content\">\n      <div className=\"time has-text-dark\">\n        {m}:{pad(s)}\n      </div>\n    </div>\n  )\n}\n","export const pad = (n, width = 2, z = '0') => {\n  n = n + ''\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Time from './time'\n\nconst buttonStyle = {\n  margin: '0px 10px',\n};\nclass CountDown extends Component {\n  constructor() {\n    super()\n    this.timer = undefined\n    this.state = {\n      m: 0,\n      s: 2\n    }\n  }\n\n  beginCountDown = () => {\n    this.timer = setInterval(() => {\n      if (this.start(this.state) === 0) {\n        clearInterval(this.timer)\n        this.props.history.push('/congratulation')\n      }\n    }, 1000)\n  }\n\n  start({ m, s }) {\n    if (s > 0) {\n      this.setState({ s: s - 1 })\n    } else {\n      if (m > 0) {\n        this.setState({ m: m - 1, s: 59 })\n      }\n    }\n    return m + s\n  }\n\n  reset = () => {\n    clearInterval(this.timer)\n    this.setState({ m: 10, s: 0 })\n  }\n\n  render() {\n    const { m, s } = this.state\n    return (\n      <div>\n        <Time m={m} s={s} />\n        <div className='has-text-centered'>\n          <div\n            className='button is-primary is-rounded'\n            style={buttonStyle}\n            onClick={this.beginCountDown}\n          >\n            START\n          </div>\n          <div className='button is-info is-rounded' onClick={this.reset}>\n            RESTART\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CountDown)\n","import React from 'react'\nimport CountDown from '../countDown'\nexport default () => {\n  return (\n<div>\n  <CountDown />\n</div>\n  )\n}\n","// eslint-disable\nimport React, { Component } from 'react'\nimport logo from './logo.svg'\n\nexport default class Layout extends Component {\n  render() {\n    return (\n      <nav\n        className='navbar has-background-black-ter'\n        role='navigation'\n        aria-label='main navigation'\n      >\n        <div className='navbar-brand'>\n          <div\n            className='navbar-item is-paddingless'\n            href='https://github.com/Liugq5713'\n          >\n            <img className='svg' src={logo} alt='' width='112' height='28' />\n          </div>\n          <a\n            role='button'\n            className='navbar-burger'\n            aria-label='menu'\n            aria-expanded='false'\n            href='https://github.com/Liugq5713'\n          >\n            <span aria-hidden='true' />\n            <span aria-hidden='true' />\n            <span aria-hidden='true' />\n          </a>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React from 'react'\nimport congratulation from './congratulation.gif'\n\nexport default () => (\n  <div>\n    <img src={congratulation} alt='成功' />\n    <h1 className='has-text-grey has-text-centered is-size-3'>休息一下吧！</h1>\n  </div>\n)\n","// eslint-disable\nimport React, { Component } from 'react'\nimport Content from '../content'\nimport Header from '../header'\nimport Congratulation from '../congratulation'\nimport './index.css'\nimport { HashRouter  as Router, Route} from 'react-router-dom'\n\nexport default class Layout extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL} >\n        <div>\n          <div className='has-background-white'>\n            <Header />\n          </div>\n          <Route path='/' exact component={Content} />\n          <Route path='/congratulation' component={Congratulation} />\n        </div>\n      </Router>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\n// import { requestNotifyPermission, createNotification } from '../../utils/notify'\nimport Layout from '../layout';\n\nexport default class Home extends Component {\n  componentDidMount() {\n    // requestNotifyPermission()\n    // const notification = {\n    //   title: 'test',\n    //   text: 'hoho',\n    //   img: 'dd'\n    // }\n    // createNotification(notification)\n    // axios.get('http://localhost:5000/api/all').then(res=>{\n    //   console.log('res', res)\n    // })\n  }\n  render() {\n    return (\n      <div>\n        <Layout />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport './App.css'\nimport 'bulma/css/bulma.min.css'\nimport Home from './views/home'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='Appii'>\n        <Home />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}